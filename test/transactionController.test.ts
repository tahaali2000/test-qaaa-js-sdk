/**
 * Pagination TesterLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { TransactionController } from '../src';
import { testClient } from './testClient';
import { expectHeadersToMatch, makeApiCall } from './testHelper';

describe('TransactionController', () => {
  let controller : TransactionController;

  beforeAll(() => {
    controller = new TransactionController(testClient);
  });

  it('should Test fetch with offset', async () => {
    const offset = 0;

    const limit = 10;

    const response = await makeApiCall(
      () => controller.fetchWithOffset(offset, limit)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = {
      'Content-Type': ['application/json; charset=utf-8', true],
    };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });

  it('should Test fetch with cursor', async () => {
    const cursor = 'txn_abc123';

    const limit = 10;

    const response = await makeApiCall(
      () => controller.fetchWithCursor(cursor, limit)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = {
      'Content-Type': ['application/json; charset=utf-8', true],
    };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });

  it('should Test fetch with link', async () => {
    const page = 1;

    const size = 10;

    const response = await makeApiCall(
      () => controller.fetchWithLink(page, size)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = {
      'Content-Type': ['application/json; charset=utf-8', true],
    };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });
});
